{"ast":null,"code":"var _jsxFileName = \"/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/packs/Index.js\",\n    _this = this;\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerReducer, routerMiddleware } from 'react-router-redux';\nimport { compose, createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport persistState from 'redux-localstorage';\nimport App from '../components/App';\nvar history = createBrowserHistory();\nvar rootReducer = combineReducers({\n  auth: auth,\n  router: routerReducer\n});\nvar middlewares = [thunkMiddleware, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var _require = require('redux-logger'),\n      logger = _require.logger;\n\n  middlewares.push(logger);\n}\n\nvar enhancer = compose(applyMiddleware.apply(void 0, middlewares), persistState('auth', {\n  key: 'AUTH'\n}));\nvar store = createStore(rootReducer, {}, enhancer);\ndocument.addEventListener('DOMContentLoaded', function () {\n  ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })), document.getElementById('wrapper'));\n});","map":{"version":3,"sources":["/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/packs/Index.js"],"names":["React","ReactDOM","Provider","connect","createBrowserHistory","ConnectedRouter","routerReducer","routerMiddleware","compose","createStore","applyMiddleware","combineReducers","thunkMiddleware","persistState","App","history","rootReducer","auth","router","middlewares","process","env","NODE_ENV","require","logger","push","enhancer","key","store","document","addEventListener","render","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,gBAAzC,QAAiE,oBAAjE;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,IAAMC,OAAO,GAAGX,oBAAoB,EAApC;AAEA,IAAMY,WAAW,GAAGL,eAAe,CAAC;AAClCM,EAAAA,IAAI,EAAJA,IADkC;AAElCC,EAAAA,MAAM,EAAEZ;AAF0B,CAAD,CAAnC;AAKA,IAAMa,WAAW,GAAG,CAACP,eAAD,EAAkBL,gBAAgB,CAACQ,OAAD,CAAlC,CAApB;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,iBAAmBC,OAAO,CAAC,cAAD,CAA1B;AAAA,MAAQC,MAAR,YAAQA,MAAR;;AACAL,EAAAA,WAAW,CAACM,IAAZ,CAAiBD,MAAjB;AACD;;AAED,IAAME,QAAQ,GAAGlB,OAAO,CACtBE,eAAe,MAAf,SAAmBS,WAAnB,CADsB,EAEtBN,YAAY,CAAC,MAAD,EAAS;AAAEc,EAAAA,GAAG,EAAE;AAAP,CAAT,CAFU,CAAxB;AAKA,IAAMC,KAAK,GAAGnB,WAAW,CAACO,WAAD,EAAc,EAAd,EAAkBU,QAAlB,CAAzB;AAEAG,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD7B,EAAAA,QAAQ,CAAC8B,MAAT,eACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIEC,QAAQ,CAACG,cAAT,CAAwB,SAAxB,CAJF;AAMD,CAPD","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider, connect } from 'react-redux'\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerReducer, routerMiddleware } from 'react-router-redux'\nimport { compose, createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport persistState from 'redux-localstorage'\n\nimport App from '../components/App'\n\nconst history = createBrowserHistory()\n\nconst rootReducer = combineReducers({\n  auth,\n  router: routerReducer\n})\n\nconst middlewares = [thunkMiddleware, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger')\n  middlewares.push(logger)\n}\n\nconst enhancer = compose(\n  applyMiddleware(...middlewares),\n  persistState('auth', { key: 'AUTH' })\n)\n\nconst store = createStore(rootReducer, {}, enhancer)\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('wrapper')\n  )\n})"]},"metadata":{},"sourceType":"module"}