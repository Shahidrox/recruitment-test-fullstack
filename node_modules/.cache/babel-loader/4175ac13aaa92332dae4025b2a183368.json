{"ast":null,"code":"import axios from 'axios';\nvar REQUEST = 'react-devise-sample/auth/REQUEST';\nvar RECEIVED = 'react-devise-sample/auth/RECEIVED';\nvar FAILED = 'react-devise-sample/auth/FAILED';\nvar SIGNOUT = 'react-devise-sample/auth/SIGNOUT';\nexport function fetchArticles() {\n  // return (dispatch, getState) => {\n  //   dispatch(requestArticles())\n  //   return axios({\n  //     url: '/api/v1/articles/list',\n  //     method: 'POST'\n  //   }).then(response => {\n  //     dispatch(receiveArticles(response.data))\n  //   }).catch(error => {\n  //     dispatch(failFetchArticles())\n  //   })\n  // }\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.auth;\n\n    dispatch(requestNotes());\n    return axios({\n      url: '/api/v1/articles/list',\n      headers: {}\n    }).then(function (response) {\n      dispatch(requestArticles(response.data));\n    })[\"catch\"](function (error) {\n      dispatch(failFetchArticles());\n\n      if (error.response && error.response.status === 401) {\n        dispatch(expireAuthentication());\n      }\n    });\n  };\n}\n\nfunction requestArticles() {\n  return {\n    type: REQUEST\n  };\n}\n\nfunction receiveArticles(data) {\n  return {\n    type: RECEIVED,\n    data: data\n  };\n}\n\nfunction failFetchArticles() {\n  return {\n    type: FAILED\n  };\n}\n\nfunction expireAuthentication() {\n  console.log('EXP');\n} // Reducer\n\n\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case REQUEST:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case RECEIVED:\n      return {\n        loading: false,\n        articles: action.date.articles,\n        pagination: action.date.pagination\n      };\n\n    case FAILED:\n      {\n        return Object.assign({}, state, {\n          loading: false\n        });\n      }\n\n    default:\n      return state;\n  }\n}\nvar initialState = {\n  loading: false,\n  isAuthenticated: false,\n  client: null,\n  accessToken: null,\n  uid: null,\n  expiry: null\n};","map":{"version":3,"sources":["/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/components/modules/ArticleList.js"],"names":["axios","REQUEST","RECEIVED","FAILED","SIGNOUT","fetchArticles","dispatch","getState","auth","requestNotes","url","headers","then","response","requestArticles","data","error","failFetchArticles","status","expireAuthentication","type","receiveArticles","console","log","reducer","state","initialState","action","Object","assign","loading","articles","date","pagination","isAuthenticated","client","accessToken","uid","expiry"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,kCAAhB;AACA,IAAMC,QAAQ,GAAG,mCAAjB;AACA,IAAMC,MAAM,GAAG,iCAAf;AACA,IAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,oBAAiBA,QAAQ,EAAzB;AAAA,QAAQC,IAAR,aAAQA,IAAR;;AACAF,IAAAA,QAAQ,CAACG,YAAY,EAAb,CAAR;AACA,WAAOT,KAAK,CAAC;AACXU,MAAAA,GAAG,EAAE,uBADM;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAD,CAAL,CAGJC,IAHI,CAGC,UAAAC,QAAQ,EAAI;AAClBP,MAAAA,QAAQ,CAACQ,eAAe,CAACD,QAAQ,CAACE,IAAV,CAAhB,CAAR;AACD,KALM,WAKE,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACW,iBAAiB,EAAlB,CAAR;;AACA,UAAID,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACH,QAAN,CAAeK,MAAf,KAA0B,GAAhD,EAAqD;AACnDZ,QAAAA,QAAQ,CAACa,oBAAoB,EAArB,CAAR;AACD;AACF,KAVM,CAAP;AAWD,GAdD;AAeD;;AAED,SAASL,eAAT,GAA2B;AACzB,SAAO;AAAEM,IAAAA,IAAI,EAAEnB;AAAR,GAAP;AACD;;AAED,SAASoB,eAAT,CAAyBN,IAAzB,EAA+B;AAC7B,SAAO;AAAEK,IAAAA,IAAI,EAAElB,QAAR;AAAkBa,IAAAA,IAAI,EAAJA;AAAlB,GAAP;AACD;;AAED,SAASE,iBAAT,GAA6B;AAC3B,SAAO;AAAEG,IAAAA,IAAI,EAAEjB;AAAR,GAAP;AACD;;AAED,SAASgB,oBAAT,GAA+B;AAC7BG,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,C,CAED;;;AACA,eAAe,SAASC,OAAT,GAAoD;AAAA,MAAnCC,KAAmC,uEAA3BC,YAA2B;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACjE,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKnB,OAAL;AACE,aAAO2B,MAAM,CAACC,MAAP,CACL,EADK,EAELJ,KAFK,EAGL;AACEK,QAAAA,OAAO,EAAE;AADX,OAHK,CAAP;;AAOF,SAAK5B,QAAL;AACE,aAAO;AACL4B,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYD,QAFjB;AAGLE,QAAAA,UAAU,EAAEN,MAAM,CAACK,IAAP,CAAYC;AAHnB,OAAP;;AAKF,SAAK9B,MAAL;AAAY;AACV,eAAOyB,MAAM,CAACC,MAAP,CACL,EADK,EAELJ,KAFK,EAGL;AACEK,UAAAA,OAAO,EAAE;AADX,SAHK,CAAP;AAOD;;AACD;AAAS,aAAOL,KAAP;AAxBX;AA0BD;AAED,IAAMC,YAAY,GAAG;AACnBI,EAAAA,OAAO,EAAE,KADU;AAEnBI,EAAAA,eAAe,EAAE,KAFE;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,WAAW,EAAE,IAJM;AAKnBC,EAAAA,GAAG,EAAE,IALc;AAMnBC,EAAAA,MAAM,EAAE;AANW,CAArB","sourcesContent":["import axios from 'axios'\n\nconst REQUEST = 'react-devise-sample/auth/REQUEST'\nconst RECEIVED = 'react-devise-sample/auth/RECEIVED'\nconst FAILED = 'react-devise-sample/auth/FAILED'\nconst SIGNOUT = 'react-devise-sample/auth/SIGNOUT'\n\nexport function fetchArticles() {\n  // return (dispatch, getState) => {\n  //   dispatch(requestArticles())\n  //   return axios({\n  //     url: '/api/v1/articles/list',\n  //     method: 'POST'\n  //   }).then(response => {\n  //     dispatch(receiveArticles(response.data))\n  //   }).catch(error => {\n  //     dispatch(failFetchArticles())\n  //   })\n  // }\n  return (dispatch, getState) => {\n    const { auth } = getState()\n    dispatch(requestNotes())\n    return axios({\n      url: '/api/v1/articles/list',\n      headers: {}\n    }).then(response => {\n      dispatch(requestArticles(response.data))\n    }).catch(error => {\n      dispatch(failFetchArticles())\n      if (error.response && error.response.status === 401) {\n        dispatch(expireAuthentication())\n      }\n    })\n  }\n}\n\nfunction requestArticles() {\n  return { type: REQUEST }\n}\n\nfunction receiveArticles(data) {\n  return { type: RECEIVED, data }\n}\n\nfunction failFetchArticles() {\n  return { type: FAILED }\n}\n\nfunction expireAuthentication(){\n  console.log('EXP')\n}\n\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case REQUEST:\n      return Object.assign(\n        {},\n        state,\n        {\n          loading: true\n        }\n      )\n    case RECEIVED:\n      return {\n        loading: false,\n        articles: action.date.articles,\n        pagination: action.date.pagination\n      }\n    case FAILED:{\n      return Object.assign(\n        {},\n        state,\n        {\n          loading: false\n        }\n      )\n    }\n    default: return state\n  }\n}\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  client: null,\n  accessToken: null,\n  uid: null,\n  expiry: null\n}"]},"metadata":{},"sourceType":"module"}