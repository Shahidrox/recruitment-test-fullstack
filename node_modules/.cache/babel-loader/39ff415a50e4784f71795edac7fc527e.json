{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react'; // import axios from 'axios'\n// import { connect } from 'react-redux'\n// import { useHistory, Link } from \"react-router-dom\"\n\nvar NewArtical = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewArtical, _React$Component);\n\n  var _super = _createSuper(NewArtical);\n\n  function NewArtical() {\n    _classCallCheck(this, NewArtical);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NewArtical, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return NewArtical;\n}(React.Component);\n\nexport default NewArtical;","map":{"version":3,"sources":["/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/components/article/New.js"],"names":["React","NewArtical","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;IAEMC,U;;;;;;;;;;;;;WACJ,kBAAS;AACP,0BACE,yCADF;AAID;;;;EANsBD,KAAK,CAACE,S;;AAS/B,eAAeD,UAAf","sourcesContent":["import React from 'react'\n// import axios from 'axios'\n// import { connect } from 'react-redux'\n// import { useHistory, Link } from \"react-router-dom\"\n\nclass NewArtical extends React.Component {\n  render() {\n    return (\n      <>\n      </>\n    )\n  }\n}\n\nexport default NewArtical"]},"metadata":{},"sourceType":"module"}