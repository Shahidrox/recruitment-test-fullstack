{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { List, ListItem, ListSubHeader } from 'react-toolbox/lib/list';\nimport { fetchArticles } from '../modules/ArticleList';\n\nvar ArticlesList = /*#__PURE__*/function (_React$Component) {\n  _inherits(ArticlesList, _React$Component);\n\n  var _super = _createSuper(ArticlesList);\n\n  function ArticlesList() {\n    _classCallCheck(this, ArticlesList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ArticlesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchArticles());\n    }\n  }]);\n\n  return ArticlesList;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var articleListState = state.article;\n  var loading = articleListState.loading,\n      articles = articleListState.articles;\n  return {\n    loading: loading,\n    articles: articles\n  };\n}\n\nexport default connect(mapStateToProps)(ArticleList);","map":{"version":3,"sources":["/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/components/article/Index.js"],"names":["React","Link","connect","List","ListItem","ListSubHeader","fetchArticles","ArticlesList","props","dispatch","Component","mapStateToProps","state","articleListState","article","loading","articles","ArticleList"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,aAAzB,QAA8C,wBAA9C;AACA,SAASC,aAAT,QAA8B,wBAA9B;;IAGMC,Y;;;;;;;;;;;;;WAEJ,6BAAoB;AAClB,WAAKC,KAAL,CAAWC,QAAX,CAAoBH,aAAa,EAAjC;AACD;;;;EAJwBN,KAAK,CAACU,S;;AAQjC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,OAA/B;AACA,MAAQC,OAAR,GAA8BF,gBAA9B,CAAQE,OAAR;AAAA,MAAiBC,QAAjB,GAA8BH,gBAA9B,CAAiBG,QAAjB;AACA,SAAO;AAAED,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,QAAQ,EAARA;AAAX,GAAP;AACD;;AAED,eAAed,OAAO,CAACS,eAAD,CAAP,CAAyBM,WAAzB,CAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { List, ListItem, ListSubHeader } from 'react-toolbox/lib/list'\nimport { fetchArticles } from '../modules/ArticleList'\n\n\nclass ArticlesList extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch(fetchArticles())\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const articleListState = state.article\n  const { loading, articles } = articleListState\n  return { loading, articles }\n}\n\nexport default connect(mapStateToProps)(ArticleList)\n"]},"metadata":{},"sourceType":"module"}