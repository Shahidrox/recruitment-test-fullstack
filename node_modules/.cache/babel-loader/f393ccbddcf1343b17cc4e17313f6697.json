{"ast":null,"code":"import axios from 'axios';\nvar REQUEST = 'react-devise-sample/articles/REQUEST';\nvar RECEIVED = 'react-devise-sample/articles/RECEIVED';\nvar FAILED = 'react-devise-sample/articles/FAILED';\nvar SIGNOUT = 'react-devise-sample/auth/SIGNOUT';\nexport function fetchArticles() {\n  return function (dispatch, getState) {\n    dispatch(requestArticles());\n    return axios({\n      url: '/api/v1/articles',\n      method: 'GET'\n    }).then(function (response) {\n      dispatch(receiveArticles(response.data));\n    })[\"catch\"](function (error) {\n      dispatch(failFetchArticles());\n    });\n  };\n}\n\nfunction requestArticles() {\n  return {\n    type: REQUEST\n  };\n}\n\nfunction receiveArticles(articles) {\n  return {\n    type: RECEIVED,\n    articles: articles\n  };\n}\n\nfunction failFetchArticles() {\n  return {\n    type: FAILED\n  };\n} // reducer\n// Reducer\n\n\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case REQUEST:\n      return Object.assign({}, state, {\n        loading: true\n      });\n\n    case RECEIVED:\n      return Object.assign({}, state, {\n        loading: false,\n        isAuthenticated: true,\n        uid: action.uid,\n        client: action.client,\n        accessToken: action.accessToken,\n        expiry: action.expiry\n      });\n\n    case FAILED:\n      return Object.assign({}, state, {\n        loading: false\n      });\n\n    case SIGNOUT:\n      return Object.assign({}, initialState);\n\n    default:\n      return state;\n  }\n\n  ;\n}\nvar initialState = {\n  loading: false,\n  isAuthenticated: false,\n  client: null,\n  accessToken: null,\n  uid: null,\n  expiry: null\n};","map":{"version":3,"sources":["/Users/shahid/Desktop/recruitment-test-fullstack/app/javascript/components/modules/ArticleList.js"],"names":["axios","REQUEST","RECEIVED","FAILED","SIGNOUT","fetchArticles","dispatch","getState","requestArticles","url","method","then","response","receiveArticles","data","error","failFetchArticles","type","articles","reducer","state","initialState","action","Object","assign","loading","isAuthenticated","uid","client","accessToken","expiry"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,sCAAhB;AACA,IAAMC,QAAQ,GAAG,uCAAjB;AACA,IAAMC,MAAM,GAAG,qCAAf;AACA,IAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACE,eAAe,EAAhB,CAAR;AACA,WAAOR,KAAK,CAAC;AACXS,MAAAA,GAAG,EAAE,kBADM;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAD,CAAL,CAGJC,IAHI,CAGC,UAAAC,QAAQ,EAAI;AAClBN,MAAAA,QAAQ,CAACO,eAAe,CAACD,QAAQ,CAACE,IAAV,CAAhB,CAAR;AACD,KALM,WAKE,UAAAC,KAAK,EAAI;AAChBT,MAAAA,QAAQ,CAACU,iBAAiB,EAAlB,CAAR;AACD,KAPM,CAAP;AAQD,GAVD;AAWD;;AAED,SAASR,eAAT,GAA2B;AACzB,SAAO;AAAES,IAAAA,IAAI,EAAEhB;AAAR,GAAP;AACD;;AAED,SAASY,eAAT,CAAyBK,QAAzB,EAAmC;AACjC,SAAO;AAAED,IAAAA,IAAI,EAAEf,QAAR;AAAkBgB,IAAAA,QAAQ,EAARA;AAAlB,GAAP;AACD;;AAED,SAASF,iBAAT,GAA6B;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAEd;AAAR,GAAP;AACD,C,CACD;AACA;;;AACA,eAAe,SAASgB,OAAT,GAAoD;AAAA,MAAnCC,KAAmC,uEAA3BC,YAA2B;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AACjE,UAAQA,MAAM,CAACL,IAAf;AACE,SAAKhB,OAAL;AACE,aAAOsB,MAAM,CAACC,MAAP,CACL,EADK,EAELJ,KAFK,EAGL;AACEK,QAAAA,OAAO,EAAE;AADX,OAHK,CAAP;;AAOF,SAAKvB,QAAL;AACE,aAAOqB,MAAM,CAACC,MAAP,CACL,EADK,EAELJ,KAFK,EAGL;AACEK,QAAAA,OAAO,EAAE,KADX;AAEEC,QAAAA,eAAe,EAAE,IAFnB;AAGEC,QAAAA,GAAG,EAAEL,MAAM,CAACK,GAHd;AAIEC,QAAAA,MAAM,EAAEN,MAAM,CAACM,MAJjB;AAKEC,QAAAA,WAAW,EAAEP,MAAM,CAACO,WALtB;AAMEC,QAAAA,MAAM,EAAER,MAAM,CAACQ;AANjB,OAHK,CAAP;;AAYF,SAAK3B,MAAL;AACE,aAAOoB,MAAM,CAACC,MAAP,CACL,EADK,EAELJ,KAFK,EAGL;AACEK,QAAAA,OAAO,EAAE;AADX,OAHK,CAAP;;AAOF,SAAKrB,OAAL;AACE,aAAOmB,MAAM,CAACC,MAAP,CACL,EADK,EAELH,YAFK,CAAP;;AAIF;AAAS,aAAOD,KAAP;AAnCX;;AAoCC;AACF;AAED,IAAMC,YAAY,GAAG;AACnBI,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,eAAe,EAAE,KAFE;AAGnBE,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,WAAW,EAAE,IAJM;AAKnBF,EAAAA,GAAG,EAAE,IALc;AAMnBG,EAAAA,MAAM,EAAE;AANW,CAArB","sourcesContent":["import axios from 'axios'\n\nconst REQUEST = 'react-devise-sample/articles/REQUEST'\nconst RECEIVED = 'react-devise-sample/articles/RECEIVED'\nconst FAILED = 'react-devise-sample/articles/FAILED'\nconst SIGNOUT = 'react-devise-sample/auth/SIGNOUT'\n\nexport function fetchArticles() {\n  return (dispatch, getState) => {\n    dispatch(requestArticles())\n    return axios({\n      url: '/api/v1/articles',\n      method: 'GET'\n    }).then(response => {\n      dispatch(receiveArticles(response.data))\n    }).catch(error => {\n      dispatch(failFetchArticles())\n    })\n  }\n}\n\nfunction requestArticles() {\n  return { type: REQUEST }\n}\n\nfunction receiveArticles(articles) {\n  return { type: RECEIVED, articles }\n}\n\nfunction failFetchArticles() {\n  return { type: FAILED }\n}\n// reducer\n// Reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case REQUEST:\n      return Object.assign(\n        {},\n        state,\n        {\n          loading: true\n        }\n      )\n    case RECEIVED:\n      return Object.assign(\n        {},\n        state,\n        {\n          loading: false,\n          isAuthenticated: true,\n          uid: action.uid,\n          client: action.client,\n          accessToken: action.accessToken,\n          expiry: action.expiry\n        }\n      )\n    case FAILED:\n      return Object.assign(\n        {},\n        state,\n        {\n          loading: false\n        }\n      )\n    case SIGNOUT:\n      return Object.assign(\n        {},\n        initialState\n      )\n    default: return state\n  };\n}\n\nconst initialState = {\n  loading: false,\n  isAuthenticated: false,\n  client: null,\n  accessToken: null,\n  uid: null,\n  expiry: null\n}"]},"metadata":{},"sourceType":"module"}